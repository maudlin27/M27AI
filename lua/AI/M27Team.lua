---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by maudlin27.
--- DateTime: 24/07/2022 19:32
---
local M27Overseer = import('/mods/M27AI/lua/AI/M27Overseer.lua')
local M27Utilities = import('/mods/M27AI/lua/M27Utilities.lua')
local M27EconomyOverseer = import('/mods/M27AI/lua/AI/M27EconomyOverseer.lua')


tTeamData = {} --[x] is the aiBrain.M27Team number - stores certain team-wide information
reftFriendlyActiveM27Brains = 'M27OTeamFriendlyM27Brains' --Stored against tTeamData[brain.M27Team], returns table of all M27 brains on the same team (including this one), with a key of the army index
iTotalTeamCount = 0 --Number of teams in the game
subrefNukeLaunchLocations = 'M27TeamNukeTargets' --stored against tTeamData[brain.M27Team], [x] is gametimeseconds, returns the location of a nuke target
refiEnemyWalls = 'M27TeamEnemyWallCount' --stored against tTeamData[brain.M27Team], returns the ntotal number of enemy wall units; used as threshold to enable engineers to start looking for wall segments to reclaim
refiTimeOfLastEnemyTeamDataUpdate = 'M27TeamEnemyLastUpdate' --as above, returns the gametimeseconds of hte last update
reftEnemyArtiToAvoid = 'M27TeamEnemyArtiToAvoid' --against tTeamData[aiBrain.M27Team], [x] is a count (so table.getn works), returns T2 arti units that has got enough mass kills to want to avoid
refiFriendlyFatboyCount = 'M27TeamFriendlyFatboys' --against tTeamData[aiBrain.M27Team], returns the number of friendly fatboys on the team
refbActiveResourceMonitor = 'M27TeamActiveResourceMonitor' --against tTeamData[aiBrain.M27Team], true if the tema has an active resource monitor

refbActiveNovaxCoordinator = 'M27TeamNovaxCoordinator'
refbActiveLandExperimentalCoordinator = 'M27TeamExperimentalCoordinator' --Used to decide actions involving multiple experimentals


--Variables recorded elsewhere relating to team data:
--[[

M27MapInfo:
Various informatino about chokepoints, starting with the refbConsideredChokepointsForTeam variable
includes chokepoint locations, the average team and enemy team start positions for the chokepoint line, angle and distances relating to chokepoints

--]]


function UpdateTeamDataForEnemyUnits(aiBrain)
    if GetGameTimeSeconds() - (tTeamData[aiBrain.M27Team][refiTimeOfLastEnemyTeamDataUpdate] or 0) >= 9.9 then
        --Record number of wall segments
        tTeamData[aiBrain.M27Team][refiTimeOfLastEnemyTeamDataUpdate] = GetGameTimeSeconds()
        local iWallCount = 0
        for iBrain, oBrain in aiBrain[toEnemyBrains] do
            iWallCount = iWallCount + oBrain:GetCurrentUnits(M27UnitInfo.refCategoryWall)
        end
        tTeamData[aiBrain.M27Team][refiEnemyWalls] = iWallCount


        --Update T2 arti for those that are no longer valid
        if M27Utilities.IsTableEmpty(tTeamData[aiBrain.M27Team][reftEnemyArtiToAvoid]) == false then
            local bUpdatedTable = true
            local iCycleCount = 0
            while bUpdatedTable do
                iCycleCount = iCycleCount + 1
                if iCycleCount >= 20 then
                    M27Utilities.ErrorHandler('Possible infinite loop for T2 arti checker')
                    break
                end
                bUpdatedTable = false
                for iUnit, oUnit in tTeamData[aiBrain.M27Team][reftEnemyArtiToAvoid] do
                    if not(M27UnitInfo.IsUnitValid(oUnit)) then
                        table.remove(tTeamData[aiBrain.M27Team][reftEnemyArtiToAvoid], iUnit)
                        bUpdatedTable = true
                        break
                    end
                end
            end
        end



        --Update count of friendly team fatboys (so can decide whether to run platoon logic relating to this)
        local iFatboyCount = aiBrain:GetCurrentUnits(M27UnitInfo.refCategoryFatboy)
        for iBrain, oBrain in aiBrain[toAllyBrains] do
            if not(oBrain == aiBrain) then --redundancy, dont think this is needed
                iFatboyCount = iFatboyCount + aiBrain:GetCurrentUnits(M27UnitInfo.refCategoryFatboy)
            end
        end
        tTeamData[aiBrain.M27Team][refiFriendlyFatboyCount] = iFatboyCount
    end
end

function AllocateTeamResources(iTeam)

end

function TeamResourceSharingMonitor(iTeam)
    --Monitors resources for AI in the team and shares resources
    local tTeamSubtable = tTeamData[iTeam]
    if not(tTeamSubtable[M27Team.refbActiveResourceMonitor]) and M27Utilities.IsTableEmpty(tTeamSubtable[M27Team.reftFriendlyActiveM27Brains]) == false then
        tTeamSubtable[M27Team.refbActiveResourceMonitor] = true
        while M27Utilities.IsTableEmpty(tTeamData[reftFriendlyActiveM27Brains]) == false do
            break
        end
    end
end